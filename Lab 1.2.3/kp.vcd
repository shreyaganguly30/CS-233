$date
	Sun Jan 26 01:31:42 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module keypad_test $end
$var wire 1 ! valid $end
$var wire 4 " number [3:0] $end
$var wire 7 # inputs [6:0] $end
$var reg 1 $ a $end
$var reg 1 % b $end
$var reg 1 & c $end
$var reg 1 ' d $end
$var reg 1 ( e $end
$var reg 1 ) f $end
$var reg 1 * g $end
$scope module kp $end
$var wire 1 $ a $end
$var wire 1 + ad $end
$var wire 1 , ae $end
$var wire 1 - af $end
$var wire 1 % b $end
$var wire 1 . bd $end
$var wire 1 / be $end
$var wire 1 0 bf $end
$var wire 1 1 bg $end
$var wire 1 & c $end
$var wire 1 2 cd $end
$var wire 1 3 ce $end
$var wire 1 4 cf $end
$var wire 1 ' d $end
$var wire 1 ( e $end
$var wire 1 ) f $end
$var wire 1 * g $end
$var wire 1 5 not_a $end
$var wire 1 6 not_b $end
$var wire 1 7 not_c $end
$var wire 1 8 not_d $end
$var wire 1 9 not_e $end
$var wire 1 : not_f $end
$var wire 1 ; not_g $end
$var wire 1 ! valid $end
$var wire 4 < number [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 <
1;
1:
19
18
17
16
15
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
b0 #
b0 "
0!
$end
#10
1!
b1 "
b1 <
1+
08
05
1'
b1001000 #
1$
#20
b10 "
b10 <
1.
0+
06
15
1%
b101000 #
0$
#30
b11 "
b11 <
12
0.
07
16
1&
b11000 #
0%
#40
b100 "
b100 <
1,
02
09
05
18
17
1(
1$
0'
b1000100 #
0&
#50
b101 "
b101 <
1/
0,
06
15
1%
b100100 #
0$
#60
b110 "
b110 <
13
0/
07
16
1&
b10100 #
0%
#70
b111 "
b111 <
1-
03
0:
05
19
17
1)
1$
0(
b1000010 #
0&
#80
b1000 "
b1000 <
10
0-
06
15
1%
b100010 #
0$
#90
b1001 "
b1001 <
14
00
07
16
1&
b10010 #
0%
#100
b0 "
b0 <
11
04
0;
06
1:
17
1*
1%
0)
b100001 #
0&
#110
0!
01
1;
16
0*
b0 #
0%
#120
