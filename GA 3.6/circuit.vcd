$date
	Tue Jan 28 16:41:11 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! out $end
$var reg 1 " A $end
$var reg 1 # B $end
$var reg 2 $ control [1:0] $end
$scope module l $end
$var wire 1 " A $end
$var wire 1 % A_and_B $end
$var wire 1 & A_nand_B $end
$var wire 1 ' A_or_B $end
$var wire 1 # B $end
$var wire 2 ( control [1:0] $end
$var wire 1 ) not_A $end
$var wire 1 * out_2 $end
$var wire 1 + out_1 $end
$var wire 1 ! out $end
$scope module m1 $end
$var wire 1 & A $end
$var wire 1 ) B $end
$var wire 1 , control $end
$var wire 1 - not_control $end
$var wire 1 + out $end
$var wire 1 . wA $end
$var wire 1 / wB $end
$upscope $end
$scope module m2 $end
$var wire 1 ' A $end
$var wire 1 % B $end
$var wire 1 0 control $end
$var wire 1 1 not_control $end
$var wire 1 * out $end
$var wire 1 2 wA $end
$var wire 1 3 wB $end
$upscope $end
$scope module m3 $end
$var wire 1 + A $end
$var wire 1 * B $end
$var wire 1 4 control $end
$var wire 1 5 not_control $end
$var wire 1 ! out $end
$var wire 1 6 wA $end
$var wire 1 7 wB $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
16
15
04
03
02
11
00
0/
1.
1-
0,
1+
0*
1)
b0 (
0'
1&
0%
b0 $
0#
0"
1!
$end
#1
1*
12
1'
1#
#2
0)
0#
1"
#3
0!
06
0+
0.
0&
1%
1#
#4
1!
16
0*
1+
02
0-
1/
01
1)
1&
0'
0%
1,
10
0#
0"
b1 $
b1 (
#5
1'
1#
#6
0!
06
0+
0/
0)
0#
1"
#7
1*
13
0&
1%
1#
#8
1+
0*
0!
1.
1-
11
03
05
07
1)
1&
0'
0%
0,
00
14
0#
0"
b10 $
b10 (
#9
1!
17
1*
12
1'
1#
#10
0)
0#
1"
#11
0+
0.
0&
1%
1#
#12
0!
07
0*
1+
02
0-
1/
01
1)
1&
0'
0%
1,
10
0#
0"
b11 $
b11 (
#13
1'
1#
#14
0+
0/
0)
0#
1"
#15
1!
17
1*
13
0&
1%
1#
